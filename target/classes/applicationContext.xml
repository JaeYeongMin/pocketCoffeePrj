<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

  <context:component-scan base-package="com.springbook.biz">
  </context:component-scan>

  <!-- DataSource 설정 -->
  <context:property-placeholder location="classpath:db.properties"/>

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
  </bean>

  <!-- aop 어노테이션기반 --> 
  <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

  
  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="classpath:sql-map-config.xml"/>
  </bean>
  
  <bean class="org.mybatis.spring.SqlSessionTemplate">
  	<constructor-arg ref="sqlSession"></constructor-arg>
  </bean>
  
<!--
  <bean id="log" class="com.springbook.biz.common.LogAdvice"></bean>
  
  사전 처리
  <bean id="before" class="com.springbook.biz.common.BeforeAdvice"></bean>
  
  사후 처리
  <bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"></bean>
  
  예외 처리
  <bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"></bean>


  aorund 처리
  <bean id="around" class="com.springbook.biz.common.ArondAdvice"></bean>

  
  <aop:config>
    <aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))"/>
    
    <aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))"/>
    
    
    <aop:aspect ref="around">
      <aop:around pointcut-ref="allPointcut" method="aroundLog" />
    </aop:aspect>
    
  </aop:config>
  
   -->
  
  
  
  
  
  
  <!-- 
  <bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">
    <property name="userDAO" ref="userDAO"></property>
  </bean>
  
  <bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean>


 -->
  
<!--
  <context:component-scan base-package="polymorphism" ></context:component-scan> 
  <bean id="tv" class="polymorphism.SamsungTV">  
    <property name="speaker" ref="apple"></property>
    <property name="price" value="20000"></property>

  </bean>
  
  <bean id="sony" class="polymorphism.SonySpeaker"></bean>
  <bean id="apple" class="polymorphism.AppleSpeaker"></bean>
  
   -->

</beans>
